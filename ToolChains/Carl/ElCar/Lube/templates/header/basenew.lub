$ INPUT class
$ IF type is not "aspect"
$   IF attrib is "hasctor"
$     WITH all interfaces DO
$       IF attrib is "clsobj"
$         WITH all methods DO
$           IF attrib is not "defaultctor"

$             IF class.attrib is "singleton"
    static _ELASTOS ECode _AcquireSingletonInRegime($^
$             ELSE
    static _ELASTOS ECode _NewInRegime($^
$             END IF ;; is singleton
/* [in] */ IRegime* __pRegime$^
$             WITH all parameters DO
,$^
$               IF parameter is not last
/* [${attrib}] */ ${ParamNamespaceType(type)} ${prefixingname(parameter)}$^
$               ELSE
/* [out] */ IInterface** __ppObject)
$               END IF ;; parameter is not last
$             END DO ;; all parameters
    {
        _ELASTOS ECode ec;
        I${class.name}ClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_${class.name}, RGM_SAME_DOMAIN, 
                EIID_I${class.name}ClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->${method.name}($^
$           WITH all parameters DO
$             IF parameter is not last
${prefixingname(parameter)}, $^
$             ELSE
&pObject);
$             END IF ;; parameter is not last
$           END DO ;; all parameters

        if (!IS_RGM_NUMBER(__pRegime) && NULL != pObject)
            ec = _CObject_EnterRegime(pObject, __pRegime);

        *__ppObject = pObject;

        pClassObject->Release();

        return ec;
    }
$           END IF ;; is not defaultctor
$         END DO ;; all methods
$       END IF ;; is clsobj
$     END DO ;; all interfaces
$   END IF ;; attrib is hasctor
$ END IF ;; is not aspect
