$ INPUT class
$

interface _I${name}CallbackTrigger $^
$ IF class.attrib is "hasparent" AND super.type is not "generic"
$   WITH super DO
$     IF attrib is "hascallback" or attrib is "hasfilter"
: public _I${name}CallbackTrigger$^
,$^
$     END IF
$   END DO;; super
$ END IF;; generic
$ Rewrite("{")

$ WITH all interfaces DO
$   IF attrib is "callback" or attrib is "filter"
$           WITH all methods DO
    virtual CARAPI ${name}($^
$               WITH all parameters DO
${ParamNamespaceType(type)} ${prefixingname(parameter)}$^
$                       IF parameter is not last
, $^
$                       END IF
$               END DO ;; all parameters
)$^
$             IF interface.attrib is "inherited"
 = 0;
$             ELSE
 { return E_NOT_IMPLEMENTED; }
$             END IF;; inherited

    virtual CARAPI ${name}WithPriority($^
_ELASTOS Int32 cFlags$^
$               WITH all parameters DO
, ${ParamNamespaceType(type)} ${prefixingname(parameter)}$^
$               END DO ;; all parameters
)$^
$             IF interface.attrib is "inherited"
 = 0;
$             ELSE
 { return E_NOT_IMPLEMENTED; }
$             END IF;; inherited

    virtual CARAPI Updating${name}($^
$               WITH all parameters DO
${ParamNamespaceType(type)} ${prefixingname(parameter)}$^
$                       IF parameter is not last
, $^
$                       END IF
$               END DO ;; all parameters
)$^
$             IF interface.attrib is "inherited"
 = 0;
$             ELSE
 { return E_NOT_IMPLEMENTED; }
$             END IF;; inherited

    virtual CARAPI Updating${name}WithPriority($^
_ELASTOS Int32 cFlags$^
$               WITH all parameters DO
, ${ParamNamespaceType(type)} ${prefixingname(parameter)}$^
$               END DO ;; all parameters
)$^
$             IF interface.attrib is "inherited"
 = 0;
$             ELSE
 { return E_NOT_IMPLEMENTED; }
$             END IF;; inherited

$           END DO ;; all methods
$   END IF
$ END DO ;; all interfaces
};

#ifdef _DEBUG
interface _I${name}_ForCallbackKeywordChecking $^
$ IF class.attrib is "hasparent" AND super.type is not "generic"
$   WITH super DO
$     IF attrib is "hascallback" or attrib is "hasfilter"
: public _I${name}_ForCallbackKeywordChecking$^
,$^
$     END IF
$   END DO;; super
$ END IF;; !generic
$ Rewrite("{")

$ WITH all interfaces DO
$   IF attrib is "callback" or attrib is "filter"
$           WITH all methods DO
    virtual CARAPI ${name}($^
$               WITH all parameters DO
${ParamNamespaceType(type)} ${prefixingname(parameter)}$^
$                       IF parameter is not last
, $^
$                       END IF
$               END DO ;; all parameters
)$^
 { assert(0 && "NOT Implemented!!!"); return E_NOT_IMPLEMENTED; }

    virtual CARAPI ${name}WithPriority($^
_ELASTOS Int32 cFlags$^
$               WITH all parameters DO
, ${ParamNamespaceType(type)} ${prefixingname(parameter)}$^
$               END DO ;; all parameters
)$^
 { assert(0 && "NOT Implemented!!!"); return E_NOT_IMPLEMENTED; }

    virtual CARAPI Updating${name}($^
$               WITH all parameters DO
${ParamNamespaceType(type)} ${prefixingname(parameter)}$^
$                       IF parameter is not last
, $^
$                       END IF
$               END DO ;; all parameters
)$^
 { assert(0 && "NOT Implemented!!!"); return E_NOT_IMPLEMENTED; }

    virtual CARAPI Updating${name}WithPriority($^
_ELASTOS Int32 cFlags$^
$               WITH all parameters DO
, ${ParamNamespaceType(type)} ${prefixingname(parameter)}$^
$               END DO ;; all parameters
)$^
 { assert(0 && "NOT Implemented!!!"); return E_NOT_IMPLEMENTED; }

$           END DO ;; all methods
$   END IF
$ END DO ;; all interfaces
};
#endif // _DEBUG




