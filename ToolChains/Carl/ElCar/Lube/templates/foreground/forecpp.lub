$;;=========================================================================
$;; Copyright (c) 2000-2005,  Elastos, Inc.  All Rights Reserved.
$;;=========================================================================
$
$INPUT class
$OUTPUT "${name}.cpp"

#include "${name}.h"
$WITH all interfaces DO
$   IF attrib is not "callback" and attrib is not "callbacksink" and attrib is not "clsobj" and attrib is not "filter" and name is not "IRegime" and name is not "IObject"
$       WITH all parents_and_me DO
$       WITH all methods DO
${type} ${class.name}::${name}($^
$           WITH all parameters DO

    /* [${attrib}] */ ${type} ${PrefixingNameByName(parameter)}$^
$           IF parameter is not last
,$^
$           END IF
$           END DO ;; all parameters
)
{
    // TODO: Add your code here
    return E_NOT_IMPLEMENTED;
}

$       END DO ;; all methods
$       END DO ;; parents_and_me
$   END IF ;; is not "callback" and not "callbacksink" and not "clsobj" and not "filter"
$
$   IF attrib is "callbacksink"
$       WITH all parents_and_me DO
$       WITH all methods DO
ECode ${class.name}::On${name}(
    /* [in] */ IInterface *pSender$^
$    WITH all parameters DO
,$^
    /* [${attrib}] */ ${type} ${PrefixingNameByName(parameter)}$^
$    END DO ;; all parameters
)
{
    // TODO: Add your code here
    return E_NOT_IMPLEMENTED;
}

$       END DO ;; all methods
$       END DO ;; parents_and_me
$   END IF ;; is "callbacksink"
$
$   IF attrib is "delegatesink"
$       WITH all parents_and_me DO
$       WITH all methods DO
ECode ${class.name}::Do${name}(
    /* [in] */ IInterface *pSender$^
$    WITH all parameters DO
,$^
    /* [${attrib}] */ ${type} ${PrefixingNameByName(parameter)}$^
$    END DO ;; all parameters
)
{
    // TODO: Add your code here
    return E_NOT_IMPLEMENTED;
}

$       END DO ;; all methods
$       END DO ;; parents_and_me
$   END IF ;; is "delegatesink"
$END DO ;; all interfaces
$
$IF class.attrib is not "hasTrivialCtor"
$  WITH all interfaces DO
$    IF attrib is "clsobj"
$      WITH all methods DO
${type} ${class.name}::constructor($^
$        WITH all parameters DO
$          IF parameter is not last
$            IF parameter is not first
,$^
$            END IF

    /* [${attrib}] */ ${type} ${PrefixingNameByName(parameter)}$^
$          END IF
$        END DO ;; all parameters
)
{
    // TODO: Add your code here
    return E_NOT_IMPLEMENTED;
}

$      END DO ;; all methods
$
$    END IF
$  END DO ;; all interfaces
$END IF;;
$END OUTPUT
