module {

    interface IICUCollationKey extends ICollationKey {
        /**
         * Checks if target object is equal to this object.
         * Target is first casted to CollationKey and bitwise compared.
         */
        Equals(
            [in] IInterface* object,
            [out] Boolean* result);

        /**
         * Creates a hash code for this CollationKey.
         * Compute the hash by iterating sparsely over about 32 (up to 63) bytes
         * spaced evenly through the string.  For each byte, multiply the previous
         * hash value by a prime number and add the new byte in, like a linear
         * congruential random number generator, producing a pseudo-random
         * deterministic value well distributed over the output range.
         */
        HashCode(
            [out] Int32* value);
    }
}