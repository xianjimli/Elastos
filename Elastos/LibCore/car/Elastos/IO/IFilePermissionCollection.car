module
{

    interface IFilePermissionCollection {

        /**
         * Add a permission object to the permission collection.
         *
         * @param permission
         *            the FilePermission object to add to the collection.
         * @throws IllegalArgumentException
         *             if {@code permission} is not an instance of
         *             {@code FilePermission}.
         * @throws IllegalStateException
         *             if this collection is read-only.
         * @see java.security.PermissionCollection#add(java.security.Permission)
         */
         Add(
             [in] IPermission* permission);

        /**
         * Returns an enumeration for the collection of permissions.
         *
         * @return a permission enumeration for this permission collection.
         * @see java.security.PermissionCollection#elements()
         */

        Elements(
            [out] IObjectEnumerator** elements);

        /**
         * Indicates whether this permissions collection implies a specific
         * {@code permission}.
         *
         * @param permission
         *            the permission to check.
         * @see java.security.PermissionCollection#implies(java.security.Permission)
         */
        Implies(
            [in] IPermission* permission,
            [out] Boolean* result);
    }
}