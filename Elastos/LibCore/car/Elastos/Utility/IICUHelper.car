
module
{
    interface ILocale;

    interface IICUHelper {
        /**
         * Returns an array of ISO language names (two-letter codes), fetched either
         * from ICU's database or from our memory cache.
         *
         * @return The array.
         */
        GetISOLanguages(
            [out, callee] ArrayOf<String>* languages);

        /**
         * Returns an array of ISO country names (two-letter codes), fetched either
         * from ICU's database or from our memory cache.
         *
         * @return The array.
         */
        GetISOCountries(
            [out, callee] ArrayOf<String>* countries);

        /**
         * Returns the appropriate {@code Locale} given a {@code String} of the form returned
         * by {@code toString}. This is very lenient, and doesn't care what's between the underscores:
         * this method can parse strings that {@code Locale.toString} won't produce.
         * Used to remove duplication.
         */
        LocaleFromString(
            [in] String localeName,
            [out] ILocale** locale);

        LocalesFromStrings(
            [in] ArrayOf<String> localeNames,
            [out, callee] ArrayOf<ILocale*>* locales);

        GetAvailableLocales(
            [out, callee] ArrayOf<ILocale*>* locales);

        GetAvailableBreakIteratorLocales(
            [out, callee] ArrayOf<ILocale*>* locales);

        GetAvailableCalendarLocales(
            [out, callee] ArrayOf<ILocale*>* locales);

        GetAvailableCollatorLocales(
            [out, callee] ArrayOf<ILocale*>* locales);

        GetAvailableDateFormatLocales(
            [out, callee] ArrayOf<ILocale*>* locales);

        GetAvailableDateFormatSymbolsLocales(
            [out, callee] ArrayOf<ILocale*>* locales);

        GetAvailableDecimalFormatSymbolsLocales(
            [out, callee] ArrayOf<ILocale*>* locales);

        GetAvailableNumberFormatLocales(
            [out, callee] ArrayOf<ILocale*>* locales);

        ToLowerCase(
            [in] String s,
            [in] String localname,
            [out] String* ls);

        ToUpperCase(
            [in] String s,
            [in] String localname,
            [out] String* us);

        GetCurrencyCode(
            [in] String locale,
            [out] String* currencyCode);

        GetCurrencyFractionDigits(
            [in] String currencyCode,
            [out] Int32* currencyFractionDigits);

        GetCurrencySymbol(
            [in] String locale,
            [in] String currencyCode,
            [out] String* currencySymbol);

        GetDisplayCountry(
            [in] String countryCode,
            [in] String locale,
            [out] String* displayCountry);

        GetDisplayLanguage(
            [in] String languageCode,
            [in] String locale,
            [out] String* displayLanguage);

        GetDisplayVariant(
            [in] String variantCode,
            [in] String locale,
            [out] String* displayVariant);

        GetISO3Country(
            [in] String locale,
            [out] String* ISO3country);

        GetISO3Language(
            [in] String locale,
            [out] String* ISO3Language);
    }
}
