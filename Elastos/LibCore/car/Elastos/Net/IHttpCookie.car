
module
{
    interface IHttpCookie {
        /**
         * Returns the {@code Comment} attribute.
         */
        GetComment(
            [out] String* comment);

        /**
         * Returns the value of {@code CommentURL} attribute.
         */
        GetCommentURL(
            [out] String* url);

        /**
         * Returns the {@code Discard} attribute.
         */
        GetDiscard(
            [out] Boolean* discard);

        /**
         * Returns the {@code Domain} attribute.
         */
        GetDomainAttr(
            [out] String* theDomain);

        /**
         * Returns the {@code Max-Age} attribute, in delta-seconds.
         */
        GetMaxAge(
            [out] Int64* maxAge);

        /**
         * Returns the name of this cookie.
         */
        GetName(
            [out] String* name);

        /**
         * Returns the {@code Path} attribute. This cookie is visible to all
         * subpaths.
         */
        GetPath(
            [out] String* path);

        /**
         * Returns the {@code Port} attribute, usually containing comma-separated
         * port numbers. A null port indicates that the cookie may be sent to any
         * port. The empty string indicates that the cookie should only be sent to
         * the port of the originating request.
         */
        GetPortList(
            [out] String* portList);

        /**
         * Returns the {@code Secure} attribute.
         */
        GetSecure(
            [out] Boolean* secure);

        /**
         * Returns the value of this cookie.
         */
        GetValue(
            [out] String* value);

        /**
         * Returns the version of this cookie.
         */
        GetVersion(
            [out] Int32* theVersion);

        /**
         * Returns true if this cookie's Max-Age is 0.
         */
        HasExpired(
            [out] Boolean* expired);

        /**
         * Set the {@code Comment} attribute of this cookie.
         */
        SetComment(
            [in] String comment);

        /**
         * Set the {@code CommentURL} attribute of this cookie.
         */
        SetCommentURL(
            [in] String commentURL);

        /**
         * Set the {@code Discard} attribute of this cookie.
         */
        SetDiscard(
            [in] Boolean discard);

        /**
         * Set the {@code Domain} attribute of this cookie. HTTP clients send
         * cookies only to matching domains.
         */
        SetDomain(
            [in] String pattern);

        /**
         * Sets the {@code Max-Age} attribute of this cookie.
         */
        SetMaxAge(
            [in] Int64 deltaSeconds);

        /**
         * Set the {@code Path} attribute of this cookie. HTTP clients send cookies
         * to this path and its subpaths.
         */
        SetPath(
            [in] String path);

        /**
         * Set the {@code Port} attribute of this cookie.
         */
        SetPortList(
            [in] String portList);

        /**
         * Sets the {@code Secure} attribute of this cookie.
         */
        SetSecure(
            [in] Boolean secure);

        /**
         * Sets the opaque value of this cookie.
         */
        SetValue(
            [in] String value);

        /**
         * Sets the {@code Version} attribute of the cookie.
         *
         * @throws IllegalArgumentException if v is neither 0 nor 1
         */
        SetVersion(
            [in] Int32 v);
    }
}
