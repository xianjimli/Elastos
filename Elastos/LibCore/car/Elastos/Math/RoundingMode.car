
module
{
    /**
     * Specifies the rounding behavior for operations whose results cannot be
     * represented exactly.
     */
    enum RoundingMode {
        /**
         * Rounding mode where positive values are rounded towards positive infinity
         * and negative values towards negative infinity.
         * <br>
         * Rule: {@code x.round().abs() >= x.abs()}
         */
        RoundingMode_UP = 0, //BigDecimal.ROUND_UP

        /**
         * Rounding mode where the values are rounded towards zero.
         * <br>
         * Rule: {@code x.round().abs() <= x.abs()}
         */
        RoundingMode_DOWN = 1, //BigDecimal_ROUND_DOWN

        /**
         * Rounding mode to round towards positive infinity. For positive values
         * this rounding mode behaves as {@link #UP}, for negative values as
         * {@link #DOWN}.
         * <br>
         * Rule: {@code x.round() >= x}
         */
        RoundingMode_CEILING = 2, //BigDecimal_ROUND_CEILING

        /**
         * Rounding mode to round towards negative infinity. For positive values
         * this rounding mode behaves as {@link #DOWN}, for negative values as
         * {@link #UP}.
         * <br>
         * Rule: {@code x.round() <= x}
         */
        RoundingMode_FLOOR = 3, //BigDecimal_ROUND_FLOOR

        /**
         * Rounding mode where values are rounded towards the nearest neighbor. Ties
         * are broken by rounding up.
         */
        RoundingMode_HALF_UP = 4, //BigDecimal_ROUND_HALF_UP

        /**
         * Rounding mode where values are rounded towards the nearest neighbor. Ties
         * are broken by rounding down.
         */
        RoundingMode_HALF_DOWN = 5, //BigDecimal_ROUND_HALF_DOWN

        /**
         * Rounding mode where values are rounded towards the nearest neighbor. Ties
         * are broken by rounding to the even neighbor.
         */
        RoundingMode_HALF_EVEN = 6, //BigDecimal_ROUND_HALF_EVEN

        /**
         * Rounding mode where the rounding operations throws an ArithmeticException
         * for the case that rounding is necessary, i.e. for the case that the value
         * cannot be represented exactly.
         */
        RoundingMode_UNNECESSARY = 7, //BigDecimal_ROUND_UNNECESSARY
    }
}