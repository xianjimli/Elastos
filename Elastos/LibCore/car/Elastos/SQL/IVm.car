
module
{
    interface ICallback;

    /**
	 * Class to represent compiled SQLite VM.
	 */
    interface IVm {

        /**
	     * Perform one step on compiled SQLite VM.
	     * The result row is passed to the given callback interface.<BR><BR>
	     *
	     * Example:<BR>
	     * <PRE>
	     *   ...
	     *   try {
	     *     Vm vm = db.compile("select * from x; select * from y;");
	     *     while (vm.step(cb)) {
	     *       ...
	     *     }
	     *     while (vm.compile()) {
	     *       while (vm.step(cb)) {
	     *         ...
	     *       }
	     *     }
	     *   } catch (SQLite.Exception e) {
	     *   }
	     * </PRE>
	     *
	     * @param cb the object implementing the callback methods.
	     * @return true as long as more row data can be retrieved,
	     * false, otherwise.
	     */
	    Step(
	        [in] ICallback* cb,
	        [out] Boolean* result);

	    /**
	     * Compile the next SQL statement for the SQLite VM instance.
	     * @return true when SQL statement has been compiled, false
	     * on end of statement sequence.
	     */
	    Compile(
	        [out] Boolean* result);

	    /**
	     * Abort the compiled SQLite VM.
	     */
	    Stop();
    }
}