
module
{
    interface IHttpContext;

    /**
     * A handler for determining if an HttpRequest should be retried after a
     * recoverable exception during execution.
     *
     * <p>
     * Classes implementing this interface must synchronize access to shared
     * data as methods of this interfrace may be executed from multiple threads
     * </p>
     *
     * @author Michael Becke
     * @author <a href="mailto:oleg at ural.ru">Oleg Kalnichevski</a>
     */
    interface IHttpRequestRetryHandler {
        /**
         * Determines if a method should be retried after an IOException
         * occurs during execution.
         *
         * @param exception the exception that occurred
         * @param executionCount the number of times this method has been
         * unsuccessfully executed
         * @param context the context for the request execution
         *
         * @return <code>true</code> if the method should be retried, <code>false</code>
         * otherwise
         */
        RetryRequest(
            [in] Int32 errorCode,/*IOException exception*/
            [in] Int32 executionCount,
            [in] IHttpContext* context,
            [out] Boolean* result);
    }
}
