
module
{
    /**
     * This interface represents a <code>SetCookie</code> response header sent by the
     * origin server to the HTTP agent in order to maintain a conversational state.
     *
     * @author <a href="mailto:oleg at ural.ru">Oleg Kalnichevski</a>
     *
     * @since 4.0
     */
    interface ISetCookie extends ICookie {
        SetValue(
            [in] String value);

        /**
         * If a user agent (web browser) presents this cookie to a user, the
         * cookie's purpose will be described using this comment.
         *
         * @param comment
         *
         * @see #getComment()
         */
        SetComment(
            [in] String comment);

        /**
         * Sets expiration date.
         * <p><strong>Note:</strong> the object returned by this method is considered
         * immutable. Changing it (e.g. using setTime()) could result in undefined
         * behaviour. Do so at your peril.</p>
         *
         * @param expiryDate the {@link Date} after which this cookie is no longer valid.
         *
         * @see Cookie#getExpiryDate
         *
         */
        SetExpiryDate(
            [in] IDate* expiryDate);

        /**
         * Sets the domain attribute.
         *
         * @param domain The value of the domain attribute
         *
         * @see Cookie#getDomain
         */
        SetDomain(
            [in] String value);

        /**
         * Sets the path attribute.
         *
         * @param path The value of the path attribute
         *
         * @see Cookie#getPath
         *
         */
        SetPath(
            [in] String path);

        /**
         * Sets the secure attribute of the cookie.
         * <p>
         * When <tt>true</tt> the cookie should only be sent
         * using a secure protocol (https).  This should only be set when
         * the cookie's originating server used a secure protocol to set the
         * cookie's value.
         *
         * @param secure The value of the secure attribute
         *
         * @see #isSecure()
         */
        SetSecure(
            [in] Boolean secure);

        /**
         * Sets the version of the cookie specification to which this
         * cookie conforms.
         *
         * @param version the version of the cookie.
         *
         * @see Cookie#getVersion
         */
        SetVersion(
            [in] Int32 value);
    }
}
