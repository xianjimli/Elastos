
module
{
    /**
     * Defines the {@link org.apache.http.ProtocolVersion protocol version}
     * used per default.
     * <p>
     * This parameter expects a value of type
     * {@link org.apache.http.ProtocolVersion}.
     * </p>
     */
    const CoreProtocolPNames_PROTOCOL_VERSION = "http.protocol.version";

    /**
     * Defines the charset to be used for encoding HTTP protocol elements.
     * <p>
     * This parameter expects a value of type {@link String}.
     * </p>
     */
    const CoreProtocolPNames_HTTP_ELEMENT_CHARSET = "http.protocol.element-charset";

    /**
     * Defines the charset to be used per default for encoding content body.
     * <p>
     * This parameter expects a value of type {@link String}.
     * </p>
     */
    const CoreProtocolPNames_HTTP_CONTENT_CHARSET = "http.protocol.content-charset";

    /**
     * Defines the content of the <tt>User-Agent</tt> header.
     * <p>
     * This parameter expects a value of type {@link String}.
     * </p>
     */
    const CoreProtocolPNames_USER_AGENT = "http.useragent";

    /**
     * Defines the content of the <tt>Server</tt> header.
     * <p>
     * This parameter expects a value of type {@link String}.
     * </p>
     */
    const CoreProtocolPNames_ORIGIN_SERVER = "http.origin-server";

    /**
     * Defines whether responses with an invalid <tt>Transfer-Encoding</tt> header should be
     * rejected.
     * <p>
     * This parameter expects a value of type {@link Boolean}.
     * </p>
     */
    const CoreProtocolPNames_STRICT_TRANSFER_ENCODING = "http.protocol.strict-transfer-encoding";

    /**
     * <p>
     * Activates 'Expect: 100-continue' handshake for the
     * entity enclosing methods. The purpose of the 'Expect: 100-continue'
     * handshake to allow a client that is sending a request message with
     * a request body to determine if the origin server is willing to
     * accept the request (based on the request headers) before the client
     * sends the request body.
     * </p>
     *
     * <p>
     * The use of the 'Expect: 100-continue' handshake can result in
     * noticable peformance improvement for entity enclosing requests
     * (such as POST and PUT) that require the target server's
     * authentication.
     * </p>
     *
     * <p>
     * 'Expect: 100-continue' handshake should be used with
     * caution, as it may cause problems with HTTP servers and
     * proxies that do not support HTTP/1.1 protocol.
     * </p>
     *
     * This parameter expects a value of type {@link Boolean}.
     */
    const CoreProtocolPNames_USE_EXPECT_CONTINUE = "http.protocol.expect-continue";

    /**
     * <p>
     * Defines the maximum period of time in milliseconds the client should spend
     * waiting for a 100-continue response.
     * </p>
     *
     * This parameter expects a value of type {@link Integer}.
     */
    const CoreProtocolPNames_WAIT_FOR_CONTINUE = "http.protocol.wait-for-continue";

    /**
     * Defines parameter names for protocol execution in HttpCore.
     *
     * @version $Revision: 576077 $
     *
     * @since 4.0
     */
    interface ICoreProtocolPNames {
    }
}
