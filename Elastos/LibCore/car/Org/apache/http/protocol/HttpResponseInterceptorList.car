
module
{
    interface IHttpResponseInterceptor;

    /**
     * Provides access to an ordered list of response interceptors.
     * Lists are expected to be built upfront and used read-only afterwards
     * for {@link HttpProcessor processing}.
     *
     * @author <a href="mailto:rolandw at apache.org">Roland Weber</a>
     *
     * @version $Revision: 554903 $
     *
     * @since 4.0
     */
    interface IHttpResponseInterceptorList {
        /**
         * Appends a response interceptor to this list.
         *
         * @param itcp      the response interceptor to add
         */
        AddResponseInterceptor(
            [in] IHttpResponseInterceptor* itcp);

        /**
         * Inserts a response interceptor at the specified index.
         *
         * @param itcp      the response interceptor to add
         * @param index     the index to insert the interceptor at
         */
        AddResponseInterceptorEx(
            [in] IHttpResponseInterceptor* itcp,
            [in] Int32 index);

        /**
         * Obtains the current size of this list.
         *
         * @return  the number of response interceptors in this list
         */
        GetResponseInterceptorCount(
            [out] Int32* num);

        /**
         * Obtains a response interceptor from this list.
         *
         * @param index     the index of the interceptor to obtain,
         *                  0 for first
         *
         * @return  the interceptor at the given index, or
         *          <code>null</code> if the index is out of range
         */
        GetResponseInterceptor(
            [in] Int32 index,
            [out] IHttpResponseInterceptor** interceptor);

        /**
         * Removes all response interceptors from this list.
         */
        ClearResponseInterceptors();

        /**
         * Removes all response interceptor of the specified class
         *
         * @param clazz  the class of the instances to be removed.
         */
        //RemoveResponseInterceptorByClass(Class clazz);


        /**
         * Sets the response interceptors in this list.
         * This list will be cleared and re-initialized to contain
         * all response interceptors from the argument list.
         * If the argument list includes elements that are not response
         * interceptors, the behavior is implementation dependent.
         *
         * @param itcps     the list of response interceptors
         */
        SetInterceptors(
            [in] IObjectContainer* itcps);
    }
}
