
module
{
    interface IRouteInfo;

    /** Indicates that the route can not be established at all. */
    const HttpRouteDirector_UNREACHABLE = -1;

    /** Indicates that the route is complete. */
    const HttpRouteDirector_COMPLETE = 0;

    /** Step: open connection to target. */
    const HttpRouteDirector_CONNECT_TARGET = 1;

    /** Step: open connection to proxy. */
    const HttpRouteDirector_CONNECT_PROXY = 2;

    /** Step: tunnel through proxy to target. */
    const HttpRouteDirector_TUNNEL_TARGET = 3;

    /** Step: tunnel through proxy to other proxy. */
    const HttpRouteDirector_TUNNEL_PROXY = 4;

    /** Step: layer protocol (over tunnel). */
    const HttpRouteDirector_LAYER_PROTOCOL = 5;

    /**
     * Provides directions on establishing a route.
     * Implementations of this interface compare a planned route with
     * a tracked route and indicate the next step required.
     *
     * @author <a href="mailto:rolandw at apache.org">Roland Weber</a>
     *
     *
     * <!-- empty lines to avoid svn diff problems -->
     * @version $Revision: 620255 $
     *
     * @since 4.0
     */
    interface IHttpRouteDirector {
        /**
         * Provides the next step.
         *
         * @param plan      the planned route
         * @param fact      the currently established route, or
         *                  <code>null</code> if nothing is established
         *
         * @return  one of the constants defined in this interface, indicating
         *          either the next step to perform, or success, or failure.
         *          0 is for success, a negative value for failure.
         */
        NextStep(
            [in] IRouteInfo* plan,
            [in] IRouteInfo* fact,
            [out] Int32* result);
    }
}
