
module
{
    interface IHttpMessage;
    interface IStatusLine;
    interface IProtocolVersion;
    interface IHttpEntity;

    /**
     * An HTTP response.
     *
     * @author <a href="mailto:oleg at ural.ru">Oleg Kalnichevski</a>
     *
     * @version $Revision: 652956 $
     *
     * @since 4.0
     */
    interface IHttpResponse extends IHttpMessage {
        /**
         * Obtains the status line of this response.
         * The status line can be set using one of the
         * {@link #setStatusLine setStatusLine} methods,
         * or it can be initialized in a constructor.
         *
         * @return  the status line, or <code>null</code> if not yet set
         */
        GetStatusLine(
            [out] IStatusLine** statusLine);

        /**
         * Sets the status line of this response.
         *
         * @param statusline the status line of this response
         */
        SetStatusLine(
            [in] IStatusLine* statusline);

        /**
         * Sets the status line of this response.
         * The reason phrase will be determined based on the current
         * {@link #getLocale locale}.
         *
         * @param ver       the HTTP version
         * @param code      the status code
         */
        SetStatusLineEx(
            [in] IProtocolVersion* ver,
            [in] Int32 code);

        /**
         * Sets the status line of this response with a reason phrase.
         *
         * @param ver       the HTTP version
         * @param code      the status code
         * @param reason    the reason phrase, or <code>null</code> to omit
         */
        SetStatusLineEx2(
            [in] IProtocolVersion* ver,
            [in] Int32 code,
            [in] String reason);

        /**
         * Updates the status line of this response with a new status code.
         * The status line can only be updated if it is available. It must
         * have been set either explicitly or in a constructor.
         * <br/>
         * The reason phrase will be updated according to the new status code,
         * based on the current {@link #getLocale locale}. It can be set
         * explicitly using {@link #setReasonPhrase setReasonPhrase}.
         *
         * @param code the HTTP status code.
         *
         * @throws IllegalStateException
         *          if the status line has not be set
         *
         * @see HttpStatus
         * @see #setStatusLine(StatusLine)
         * @see #setStatusLine(ProtocolVersion,int)
         */
        SetStatusCode(
            [in] Int32 code);

        /**
         * Updates the status line of this response with a new reason phrase.
         * The status line can only be updated if it is available. It must
         * have been set either explicitly or in a constructor.
         *
         * @param reason    the new reason phrase as a single-line string, or
         *                  <code>null</code> to unset the reason phrase
         *
         * @throws IllegalStateException
         *          if the status line has not be set
         *
         * @see #setStatusLine(StatusLine)
         * @see #setStatusLine(ProtocolVersion,int)
         */
        SetReasonPhrase(
            [in] String reason);

        /**
         * Obtains the message entity of this response, if any.
         * The entity is provided by calling {@link #setEntity setEntity}.
         *
         * @return  the response entity, or
         *          <code>null</code> if there is none
         */
        GetEntity(
            [out] IHttpEntity** entity);

        /**
         * Associates a response entity with this response.
         *
         * @param entity    the entity to associate with this response, or
         *                  <code>null</code> to unset
         */
        SetEntity(
            [in] IHttpEntity* entity);

        /**
         * Obtains the locale of this response.
         * The locale is used to determine the reason phrase
         * for the {@link #setStatusCode status code}.
         * It can be changed using {@link #setLocale setLocale}.
         *
         * @return  the locale of this response, never <code>null</code>
         */
        GetLocale(
            [out] ILocale** locale);

        /**
         * Changes the locale of this response.
         * If there is a status line, it's reason phrase will be updated
         * according to the status code and new locale.
         *
         * @param loc       the new locale
         *
         * @see #getLocale getLocale
         * @see #setStatusCode setStatusCode
         */
        SetLocale(
            [in] ILocale* locale);
    }
}
