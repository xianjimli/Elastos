
module
{
    importlib("Elastos.IO.eco");

    merge("../../../car/Elastos/Net/NotUsed.car");
    merge("../../../car/Elastos/Net/Exceptions.car");
    merge("../../../car/Elastos/Net/ICookiePolicy.car");
    merge("../../../car/Elastos/Net/ICookieStore.car");
    merge("../../../car/Elastos/Net/IDatagramPacket.car");
    merge("../../../car/Elastos/Net/IDatagramSocket.car");
    merge("../../../car/Elastos/Net/IHttpCookie.car");
    merge("../../../car/Elastos/Net/IURLConnection.car");
    merge("../../../car/Elastos/Net/IHttpURLConnection.car");
    merge("../../../car/Elastos/Net/IInetAddress.car");
    merge("../../../car/Elastos/Net/IInet4Address.car");
    merge("../../../car/Elastos/Net/IInet6Address.car");
    merge("../../../car/Elastos/Net/ISocketAddress.car");
    merge("../../../car/Elastos/Net/IInetSocketAddress.car");
    merge("../../../car/Elastos/Net/IInterfaceAddress.car");
    merge("../../../car/Elastos/Net/IMulticastSocket.car");
    merge("../../../car/Elastos/Net/INetworkInterface.car");
    merge("../../../car/Elastos/Net/IProxy.car");
    merge("../../../car/Elastos/Net/IServerSocket.car");
    merge("../../../car/Elastos/Net/ISocket.car");
    merge("../../../car/Elastos/Net/ISocketOptions.car");
    merge("../../../car/Elastos/Net/IURI.car");
    merge("../../../car/Elastos/Net/IURL.car");

    class CInet4Address {
        constructor(
            [in] ArrayOf<Byte> address);

        constructor(
            [in] ArrayOf<Byte> address,
            [in] String name);

        interface IInet4Address;
    }

    class CInet6Address {
        constructor(
            [in] ArrayOf<Byte> address);

        constructor(
            [in] ArrayOf<Byte> address,
            [in] String name);

        /**
         * Constructs an {@code InetAddress} representing the {@code address} and
         * {@code name} and {@code scope_id}.
         *
         * @param address
         *            the network address.
         * @param name
         *            the name associated with the address.
         * @param scope_id
         *            the scope id for link- or site-local addresses.
         */
        constructor(
            [in] ArrayOf<Byte> address,
            [in] String name,
            [in] Int32 scopeId);

        /**
         * Constructs an {@code InetAddress} representing the {@code address} and
         * {@code scope_id}.
         *
         * @param address
         *            the network address.
         * @param scope_id
         *            the scope id for link- or site-local addresses.
         */
        constructor(
            [in] ArrayOf<Byte> address,
            [in] Int32 scopeId);

        interface IInet6Address;
    }
}