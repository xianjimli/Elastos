
#ifndef __CHARACTERSTYLE_H__
#define __CHARACTERSTYLE_H__

#include "ext/frameworkext.h"
#include <elastos/ElRefBase.h>
#include <elastos/AutoPtr.h>

/**
 * The classes that affect character-level text formatting extend this
 * class.  Most extend its subclass {@link MetricAffectingSpan}, but simple
 * ones may just implement {@link UpdateAppearance}.
 */
class CharacterStyle
{
public:
    virtual CARAPI_(PInterface) Probe(
        /* [in]  */ REIID riid) = 0;

    virtual CARAPI UpdateDrawState(
        /* [in] */ ITextPaint* tp) = 0;

    /**
     * A given CharacterStyle can only applied to a single region of a given
     * Spanned.  If you need to attach the same CharacterStyle to multiple
     * regions, you can use this method to wrap it with a new object that
     * will have the same effect but be a distinct object so that it can
     * also be attached without conflict.
     */
    static CARAPI_(AutoPtr<ICharacterStyle>) Wrap(
        /* [in] */ ICharacterStyle* cs);

    /**
     * Returns "this" for most CharacterStyles, but for CharacterStyles
     * that were generated by {@link #wrap}, returns the underlying
     * CharacterStyle.
     */
    virtual CARAPI GetUnderlying(
        /* [out] */ ICharacterStyle** underlying);
};

#endif //__CHARACTERSTYLE_H__
