
module
{
    interface ICriteria;
    interface ILocationListener;
    interface IPendingIntent;
    interface IGpsStatusListener;
    interface IBundle;
    interface ILocation;
    interface IGeocoderParams;
    interface IObjectContainer;

    interface ILocationManagerEx {
        GetAllProviders(
            [out] ArrayOf<String> allProviders);

        GetProviders(
            [in] ICriteria* criteria,
            [in] Boolean enabledOnly,
            [out] ArrayOf<String> providers);

        GetBestProvider(
            [in] ICriteria* criteria,
            [in] Boolean enabledOnly,
            [out] String* provider);

        ProviderMeetsCriteria(
            [in] String provider,
            [in] ICriteria* criteria,
            [out] Boolean* result);

        RequestLocationUpdates(
            [in] String provider,
            [in] ICriteria* criteria,
            [in] Int64 minTime,
            [in] Float minDistance,
            [in] Boolean singleShot,
            [in] ILocationListener* listener);

        RequestLocationUpdatesPI(
            [in] String provider,
            [in] ICriteria* criteria,
            [in] Int64 minTime,
            [in] Float minDistance,
            [in] Boolean singleShot,
            [in] IPendingIntent* intent);

        RemoveUpdates(
            [in] ILocationListener* listener);

        RemoveUpdatesPI(
            [in] IPendingIntent* intent);

        AddGpsStatusListener(
            [in] IGpsStatusListener* listener,
            [out] Boolean* result);

        RemoveGpsStatusListener(
            [in] IGpsStatusListener* listener);

        // for reporting callback completion
        LocationCallbackFinished(
            [in] ILocationListener* listener);

        SendExtraCommand(
            [in] String provider,
            [in] String command,
            [in] IBundle* inExtras, //inout
            [out] IBundle** outExtras,
            [out] Boolean* result);

        AddProximityAlert(
            [in] Double latitude,
            [in] Double longitude,
            [in] Float distance,
            [in] Int64 expiration,
            [in] IPendingIntent* intent);

        RemoveProximityAlert(
            [in] IPendingIntent* intent);

        GetProviderInfo(
            [in] String provider,
            [out] IBundle** info);

        IsProviderEnabled(
            [in] String provider,
            [out] Boolean* isEnabled);

        GetLastKnownLocation(
            [in] String provider,
            [out] ILocation** location);

        // Used by location providers to tell the location manager when it has a new location.
        // Passive is true if the location is coming from the passive provider, in which case
        // it need not be shared with other providers.
        ReportLocation(
            [in] ILocation* location,
            [in] Boolean passive);

        GeocoderIsPresent();

        GetFromLocation(
            [in] Double latitude,
            [in] Double longitude,
            [in] Int32 maxResults,
            [in] IGeocoderParams* params,
            [out] IObjectContainer** addrs,
            [out] String* result);

        GetFromLocationName(
            [in] String locationName,
            [in] Double lowerLeftLatitude,
            [in] Double lowerLeftLongitude,
            [in] Double upperRightLatitude,
            [in] Double upperRightLongitude,
            [in] Int32 maxResults,
            [in] IGeocoderParams* params,
            [out] IObjectContainer** addrs,
            [out] String* result);

        AddTestProvider(
            [in] String name,
            [in] Boolean requiresNetwork,
            [in] Boolean requiresSatellite,
            [in] Boolean requiresCell,
            [in] Boolean hasMonetaryCost,
            [in] Boolean supportsAltitude,
            [in] Boolean supportsSpeed,
            [in] Boolean supportsBearing,
            [in] Int32 powerRequirement,
            [in] Int32 accuracy);

        RemoveTestProvider(
            [in] String provider);

        SetTestProviderLocation(
            [in] String provider,
            [in] ILocation* loc);

        ClearTestProviderLocation(
            [in] String provider);

        SetTestProviderEnabled(
            [in] String provider,
            [in] Boolean enabled);

        ClearTestProviderEnabled(
            [in] String provider);

        SetTestProviderStatus(
            [in] String provider,
            [in] Int32 status,
            [in] IBundle* extras,
            [in] Int64 updateTime);

        ClearTestProviderStatus(
            [in] String provider);

        // for NI support
        SendNiResponse(
            [in] Int32 notifId,
            [in] Int32 userResponse,
            [out] Boolean* result);
    }
}

