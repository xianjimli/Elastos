
module
{
    merge("media/AudioFocusDispatcher.car");
    merge("media/IAudioService.car");
    merge("media/AudioService.car");
    merge("media/MediaScannerListener.car");
    merge("media/MediaScannerService.car");
    merge("media/AudioTrack.car");
    merge("media/AudioSystem.car");
    merge("media/AudioManager.car");
    merge("Drm/Mobile1/DrmConstraintInfo.car");
    merge("Drm/Mobile1/DrmRights.car");
    merge("Drm/Mobile1/DrmRawContent.car");
    merge("Drm/Mobile1/DrmRightsManager.car");
    merge("media/Metadata.car");
    merge("media/MediaPlayer.car");

    class CAudioTrack {
        constructor(
            [in] Int32 streamType,
            [in] Int32 sampleRateInHz,
            [in] Int32 channelConfig,
            [in] Int32 audioFormat,
            [in] Int32 bufferSizeInBytes,
            [in] Int32 mode);

        constructor(
            [in] Int32 streamType,
            [in] Int32 sampleRateInHz,
            [in] Int32 channelConfig,
            [in] Int32 audioFormat,
            [in] Int32 bufferSizeInBytes,
            [in] Int32 mode,
            [in] Int32 sessionId);

        interface IAudioTrack;
    }

    class CAudioManager {
        constructor(
            [in] IContext* context);

        interface IAudioManager;
    }

    class CAudioService {
        constructor(
            [in] IContext* context);

        interface IAudioService;
    }
    
    class CDrmConstraintInfo {
        constructor(); 
        interface IDrmConstraintInfo;
    }

    class CDrmRights {
        constructor();  
        interface IDrmRights;
    }

    class CDrmRawContent {
        constructor(
            [in] IInputStream* inRawdata,
            [in] Int32 len,
            [in] String mimeTypeStr);
            interface IDrmRawContent;
    }

    class CDrmRightsManager {
        constructor();
        interface IDrmRightsManager;
    }

    class CMetadata {
        constructor();

        interface IMetadata;
    }

    class CMediaPlayer {
        constructor();

        interface IMediaPlayer;
    }
}