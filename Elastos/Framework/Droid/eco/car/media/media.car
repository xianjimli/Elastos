
module
{
    merge("media/AudioFocusDispatcher.car");
    merge("media/IAudioService.car");
    merge("media/AudioService.car");
    merge("media/MediaScannerListener.car");
    merge("media/MediaScannerService.car");
    merge("media/AudioTrack.car");
    merge("media/AudioSystem.car");
    merge("media/AudioManager.car");
    merge("Drm/Mobile1/DrmConstraintInfo.car");
    merge("Drm/Mobile1/DrmRights.car");
    merge("media/Metadata.car");
    merge("media/MediaPlayer.car");
    merge("media/CamcorderProfile.car");
    merge("media/MediaRecorder.car");
    merge("media/AudioRecord.car");

    class CAudioTrack {
        constructor(
            [in] Int32 streamType,
            [in] Int32 sampleRateInHz,
            [in] Int32 channelConfig,
            [in] Int32 audioFormat,
            [in] Int32 bufferSizeInBytes,
            [in] Int32 mode);

        constructor(
            [in] Int32 streamType,
            [in] Int32 sampleRateInHz,
            [in] Int32 channelConfig,
            [in] Int32 audioFormat,
            [in] Int32 bufferSizeInBytes,
            [in] Int32 mode,
            [in] Int32 sessionId);

        interface IAudioTrack;
    }

    class CAudioManager {
        constructor(
            [in] IContext* context);

        interface IAudioManager;
    }

    class CAudioService {
        constructor(
            [in] IContext* context);

        interface IAudioService;
    }
    
    class CDrmConstraintInfo {
        constructor(); 
        interface IDrmConstraintInfo;
    }

    class CDrmRights {
        constructor();  
        interface IDrmRights;
    }

    class CMetadata {
        constructor();

        interface IMetadata;
    }

    class CMediaPlayer {
        constructor();

        interface IMediaPlayer;
    }

    class CCamcorderProfile {
        constructor();

        interface ICamcorderProfile;
    }

    class CMediaRecorder {

        constructor();

        interface IMediaRecorder;
    }

    class CAudioRecord {

        constructor(
            [in] Int32 audioSource, 
            [in] Int32 sampleRateInHz, 
            [in] Int32 channelConfig, 
            [in] Int32 audioFormat, 
            [in] Int32 bufferSizeInBytes);

        interface IAudioRecord;
    }
}