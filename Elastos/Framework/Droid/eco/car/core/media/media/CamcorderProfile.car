
module
{
    interface ICamcorderProfile {
        /**
         * Default recording duration in seconds before the session is terminated.
         * This is useful for applications like MMS has limited file size requirement.
         */
        GetDuration(
            [out] Int32* duration);

        /**
         * The quality level of the camcorder profile
         */
        GetQuality(
            [out] Int32* quality);

        /**
         * The file output format of the camcorder profile
         * @see android.media.MediaRecorder.OutputFormat
         */
        GetFileFormat(
            [out] Int32* fileFormat);

        /**
         * The video encoder being used for the video track
         * @see android.media.MediaRecorder.VideoEncoder
         */
        GetVideoCodec(
            [out] Int32* videoCodec);

        /**
         * The target video output bit rate in bits per second
         */
        GetVideoBitRate(
            [out] Int32* videoBitRate);

        /**
         * The target video frame rate in frames per second
         */
        GetVideoFrameRate(
            [out] Int32* videoFrameRate);

        /**
         * The target video frame width in pixels
         */
        GetVideoFrameWidth(
            [out] Int32* videoFrameWidth);

        /**
         * The target video frame height in pixels
         */
        GetVideoFrameHeight(
            [out] Int32* videoFrameHeight);

        /**
         * The audio encoder being used for the audio track.
         * @see android.media.MediaRecorder.AudioEncoder
         */
        GetAudioCodec(
            [out] Int32* audioCodec);

        /**
         * The target audio output bit rate in bits per second
         */
        GetAudioBitRate(
            [out] Int32* audioBitRate);

        /**
         * The audio sampling rate used for the audio track
         */
        GetAudioSampleRate(
            [out] Int32* audioSampleRate);

        /**
         * The number of audio channels used for the audio track
         */
        GetAudioChannels(
            [out] Int32* audioChannels);
    }

    interface ICamcorderProfileHelper {
        /**
         * Returns the camcorder profile for the first back-facing camera on the
         * device at the given quality level. If the device has no back-facing
         * camera, this returns null.
         * @param quality the target quality level for the camcorder profile
         */
        Get(
            [in] Int32 quality,
            [out] ICamcorderProfile** camcordProfile);

        /**
         * Returns the camcorder profile for the given camera at the given
         * quality level.
         * @param cameraId the id for the camera
         * @param quality the target quality level for the camcorder profile
         */
        GetEx(
            [in] Int32 cameraId,
            [in] Int32 quality,
            [out] ICamcorderProfile** camcordProfile);
    }
}
