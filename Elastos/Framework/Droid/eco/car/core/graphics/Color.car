
module
{
    const COLOR_BLACK       = 0xFF000000;
    const COLOR_DKGRAY      = 0xFF444444;
    const COLOR_GRAY        = 0xFF888888;
    const COLOR_LTGRAY      = 0xFFCCCCCC;
    const COLOR_WHITE       = 0xFFFFFFFF;
    const COLOR_RED         = 0xFFFF0000;
    const COLOR_GREEN       = 0xFF00FF00;
    const COLOR_BLUE        = 0xFF0000FF;
    const COLOR_YELLOW      = 0xFFFFFF00;
    const COLOR_CYAN        = 0xFF00FFFF;
    const COLOR_MAGENTA     = 0xFFFF00FF;
    const COLOR_TRANSPARENT = 0;

    interface IColor {
        Alpha(
            [in] Int32 color,
            [out] Int32* alpha);

        Red(
            [in] Int32 color,
            [out] Int32* red);

        Green(
            [in] Int32 color,
            [out] Int32* green);

        Blue(
            [in] Int32 color,
            [out] Int32* blue);

        Rgb(
            [in] Int32 red,
            [in] Int32 green,
            [in] Int32 blue,
            [out] Int32* rgb);

        Argb(
            [in] Int32 alpha,
            [in] Int32 red,
            [in] Int32 green,
            [in] Int32 blue,
            [out] Int32* argb);

        Hue(
            [in] Int32 color,
            [out] Float* h);

        Saturation(
            [in] Int32 color,
            [out] Float* s);

        Brightness(
            [in] Int32 color,
            [out] Float* b);

        ParseColor(
            [in] Int32 colorString,
            [out] Int32* color);

        HSBtoColor(
            [in] ArrayOf<Float> hsb,
            [out] Int32* color);

        HSBtoColorEx(
            [in] Float h,
            [in] Float s,
            [in] Float b,
            [out] Int32* color);

        RGBToHSV(
            [in] Int32 red,
            [in] Int32 green,
            [in] Int32 blue,
            [out, callee] ArrayOf<Float>* hsv);

        ColorToHSV(
            [in] Int32 color,
            [out, callee] ArrayOf<Float>* hsv);

        HSVToColor(
            [in] ArrayOf<Float> hsv,
            [out] Int32* color);

        HSVToColorEx(
            [in] Int32 alpha,
            [in] ArrayOf<Float> hsv,
            [out] Int32* color);
        }
}
