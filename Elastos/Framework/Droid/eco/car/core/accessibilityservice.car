
module
{
    merge("accessibilityservice/AccessibilityServiceInfo.car");
    merge("accessibilityservice/IAccessibilityServiceConnection.car");
    merge("accessibilityservice/IEventListener.car");

    /**
     * The {@link Intent} that must be declared as handled by the service.
     */
    const AccessibilityService_SERVICE_INTERFACE = "elastos.accessibilityservice.AccessibilityService";

    interface IAccessibilityService extends IService {
        GetServiceInfo(
            [out] IAccessibilityServiceInfo** types);

        /**
         * Callback for {@link android.view.accessibility.AccessibilityEvent}s.
         *
         * @param event An event.
         */
        OnAccessibilityEvent(
            [in] IAccessibilityEvent* event);

        /**
         * Callback for interrupting the accessibility feedback.
         */
        OnInterrupt();

        /**
         * This method is a part of the {@link AccessibilityService} lifecycle and is
         * called after the system has successfully bound to the service. If is
         * convenient to use this method for setting the {@link AccessibilityServiceInfo}.
         *
         * @see AccessibilityServiceInfo
         * @see #setServiceInfo(AccessibilityServiceInfo)
         */
        OnServiceConnected();

        /**
         * Sets the {@link AccessibilityServiceInfo} that describes this service.
         * <p>
         * Note: You can call this method any time but the info will be picked up after
         *       the system has bound to this service and when this method is called thereafter.
         *
         * @param info The info.
         */
        SetServiceInfo(
            [in] IAccessibilityServiceInfo* info);

        SetConnection(
            [in] IAccessibilityServiceConnection* connection);
    }

    /**
     * Implements the internal {@link IEventListener} interface to convert
     * incoming calls to it back to calls on an {@link AccessibilityService}.
     */
    class CEventListenerWrapper {
        constructor(
            [in] IAccessibilityService* context);

        interface IEventListener;
    }

    /**
     * This class describes an {@link AccessibilityService}. The system
     * notifies an {@link AccessibilityService} for
     * {@link android.view.accessibility.AccessibilityEvent}s
     * according to the information encapsulated in this class.
     *
     * @see AccessibilityService
     * @see android.view.accessibility.AccessibilityEvent
     */
    class CAccessibilityServiceInfo {
        interface IAccessibilityServiceInfo;
        interface IParcelable;
    }
}
