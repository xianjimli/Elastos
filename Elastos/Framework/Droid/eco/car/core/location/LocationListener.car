
module
{
    interface ILocation;
    interface IBundle;

    /**
     * Used for receiving notifications from the LocationManager when
     * the location has changed. These methods are called if the
     * LocationListener has been registered with the location manager service
     * using the {@link LocationManager#requestLocationUpdates(String, long, float, LocationListener)}
     * method.
     */
    interface ILocalLocationListener {
        /**
         * Called when the location has changed.
         *
         * <p> There are no restrictions on the use of the supplied Location object.
         *
         * @param location The new location, as a Location object.
         */
        OnLocationChanged(
            [in] ILocation* location);

        /**
         * Called when the provider status changes. This method is called when
         * a provider is unable to fetch a location or if the provider has recently
         * become available after a period of unavailability.
         *
         * @param provider the name of the location provider associated with this
         * update.
         * @param status {@link LocationProvider#OUT_OF_SERVICE} if the
         * provider is out of service, and this is not expected to change in the
         * near future; {@link LocationProvider#TEMPORARILY_UNAVAILABLE} if
         * the provider is temporarily unavailable but is expected to be available
         * shortly; and {@link LocationProvider#AVAILABLE} if the
         * provider is currently available.
         * @param extras an optional Bundle which will contain provider specific
         * status variables.
         *
         * <p> A number of common key/value pairs for the extras Bundle are listed
         * below. Providers that use any of the keys on this list must
         * provide the corresponding value as described below.
         *
         * <ul>
         * <li> satellites - the number of satellites used to derive the fix
         * </ul>
         */
        OnStatusChanged(
            [in] String provider,
            [in] Int32 status,
            [in] IBundle* extras);

        /**
         * Called when the provider is enabled by the user.
         *
         * @param provider the name of the location provider associated with this
         * update.
         */
        OnProviderEnabled(
            [in] String provider);

        /**
         * Called when the provider is disabled by the user. If requestLocationUpdates
         * is called on an already disabled provider, this method is called
         * immediately.
         *
         * @param provider the name of the location provider associated with this
         * update.
         */
        OnProviderDisabled(
            [in] String provider);
    }
}

