
module
{
    interface IMimeTypeMap {

        /**
         * Returns the file extension or an empty string iff there is no
         * extension. This method is a convenience method for obtaining the
         * extension of a url and has undefined results for other Strings.
         * @param url
         * @return The file extension of the given url.
         */
        GetFileExtensionFromUrl(
           [in] CString inUrl,
           [out] String* outUrl);

        /**
         * Return true if the given MIME type has an entry in the map.
         * @param mimeType A MIME type (i.e. text/plain)
         * @return True iff there is a mimeType entry in the map.
         */
        HasMimeType(
           [in] CString mimeType,
           [out] Boolean* flag);

        /**
         * Return the MIME type for the given extension.
         * @param extension A file extension without the leading '.'
         * @return The MIME type for the given extension or null iff there is none.
         */
        GetMimeTypeFromExtension(
           [in] CString extension,
           [out] String* mimeType);

        /**
         * Return true if the given extension has a registered MIME type.
         * @param extension A file extension without the leading '.'
         * @return True iff there is an extension entry in the map.
         */
        HasExtension(
           [in] CString extension,
           [out] Boolean* flag);

        /**
         * Return the registered extension for the given MIME type. Note that some
         * MIME types map to multiple extensions. This call will return the most
         * common extension for the given MIME type.
         * @param mimeType A MIME type (i.e. text/plain)
         * @return The extension for the given MIME type or null iff there is none.
         */
        GetExtensionFromMimeType(
           [in] CString mimeType,
           [out] String* extensionFrom);

        /**
         * Get the singleton instance of MimeTypeMap.
         * @return The singleton instance of the MIME-type map.
         */
        GetSingleton(
           [out] IMimeTypeMap** instance);
    }
}