
module
{
        interface IUrlInterceptHandler;
        interface ICacheManagerCacheResult;

        interface IUrlInterceptRegistry {
        
        }

        interface IUrlInterceptRegistryHelper {

        /**
         * set the flag to control whether url intercept is enabled or disabled
         * 
         * @param disabled true to disable the cache
         *
         * @deprecated This class was intended to be used by Gears. Since Gears was
         * deprecated, so is this class.
         *
         * synchronized
         */
        SetUrlInterceptDisabled(
           [in] Boolean disabled);

        /**
         * get the state of the url intercept, enabled or disabled
         * 
         * @return return if it is disabled
         *
         * @deprecated This class was intended to be used by Gears. Since Gears was
         * deprecated, so is this class.
         *
         * synchronized
         */
        UrlInterceptDisabled(
           [out] Boolean* flag);

        /**
         * Register a new UrlInterceptHandler. This handler will be called
         * before any that were previously registered.
         *
         * @param handler The new UrlInterceptHandler object
         * @return true if the handler was not previously registered.
         *
         * @deprecated This class was intended to be used by Gears. Since Gears was
         * deprecated, so is this class.
         *
         * synchronized
         */
        RegisterHandler(
           [in] IUrlInterceptHandler* handler,
           [out] Boolean* flag);

        /**
         * Unregister a previously registered UrlInterceptHandler.
         *
         * @param handler A previously registered UrlInterceptHandler.
         * @return true if the handler was found and removed from the list.
         *
         * @deprecated This class was intended to be used by Gears. Since Gears was
         * deprecated, so is this class.
         *
         * synchronized
         */
        UnregisterHandler(
           [in] IUrlInterceptHandler* handler,
           [out] Boolean* flag);

        /**
         * Given an url, returns the CacheResult of the first
         * UrlInterceptHandler interested, or null if none are.
         *
         * @return A CacheResult containing surrogate content.
         *
         * @deprecated This class was intended to be used by Gears. Since Gears was
         * deprecated, so is this class.
         *
         * synchronized
         */
        GetSurrogate(
           [in] CString url, 
           [in] IObjectStringMap* headers,
           [out] ICacheManagerCacheResult** result);

        /**
         * Given an url, returns the PluginData of the first
         * UrlInterceptHandler interested, or null if none are or if
         * intercepts are disabled.
         *
         * @return A PluginData instance containing surrogate content.
         *
         * @deprecated This class was intended to be used by Gears. Since Gears was
         * deprecated, so is this class.
         *
         * synchronized
         */
        GetPluginData(
           [in] CString url, 
           [in] IObjectStringMap* headers,
           [out] IPluginData** data);
    }
}