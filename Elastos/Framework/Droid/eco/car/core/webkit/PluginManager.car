
module
{
    /**
     * Service Action: A plugin wishes to be loaded in the WebView must provide
     * {@link android.content.IntentFilter IntentFilter} that accepts this
     * action in their AndroidManifest.xml.
     * <p>
     * TODO: we may change this to a new PLUGIN_ACTION if this is going to be
     * public.
     */
    //@SdkConstant(SdkConstantType.SERVICE_ACTION)
    const PLUGIN_ACTION = "android.webkit.PLUGIN";

    /**
     * A plugin wishes to be loaded in the WebView must provide this permission
     * in their AndroidManifest.xml.
     */
    const PLUGIN_PERMISSION = "android.webkit.permission.PLUGIN";

    interface IPluginManager {
        
        GetInstance(
           [in] IContext* context,
           [out] IPluginManager** instance);

        /**
         * Signal the WebCore thread to refresh its list of plugins. Use this if the
         * directory contents of one of the plugin directories has been modified and
         * needs its changes reflecting. May cause plugin load and/or unload.
         * 
         * @param reloadOpenPages Set to true to reload all open pages.
         */
        RefreshPlugins(
           [in] Boolean reloadOpenPages);

        GetPluginDirectories(
           [out] ArrayOf<String> pluginDirectories);
    }
}