
module
{
    merge("net/Uri.car");
    merge("net/Credentials.car");
    merge("net/LocalSocketAddress.car");
    merge("net/LocalSocket.car");
    merge("net/NetworkInfo.car");
    merge("net/ConnectivityManager.car");
    merge("net/IConnectivityManager.car");

    merge("net/http/Headers.car");
    merge("net/http/SslCertificate.car");
    merge("net/http/HttpAuthHandler.car");
    merge("net/http/SslError.car");
    merge("net/WebAddress.car");

    class CStringUri {
        constructor(
            [in] String uriString);

        constructor(
            [in] Handle32 uri);

        interface IUri;
    }

    class CCredentials {
        constructor(
            [in] Int32 pid,
            [in] Int32 uid,
            [in] Int32 gid);

        interface ICredentials;
    }

    class CLocalSocketAddress {
        /**
         * Creates an instance with a given name.
         *
         * @param name non-null name
         * @param namespace namespace the name should be created in.
         */
        constructor(
            [in] String name,
            [in] LocalSocketAddressNamespace ns);

        /**
         * Creates an instance with a given name in the {@link Namespace#ABSTRACT}
         * namespace
         *
         * @param name non-null name
         */
        constructor(
            [in] String name);

        interface ILocalSocketAddress;
    }

    class CLocalSocket {
        /**
         * Creates a AF_LOCAL/UNIX domain stream socket.
         */
        constructor();

        /**
         * for use with AndroidServerSocket
         * @param impl a SocketImpl
         *
         * package
         */
        constructor(
            [in] Handle32 socketImpl);

        interface ILocalSocket;
    }

    /**
     * Describes the status of a network interface of a given type
     * (currently either Mobile or Wifi).
     */
    class CNetworkInfo {

        /**
         * @param type network type
         * @deprecated
         * @hide because this constructor was only meant for internal use (and
         * has now been superseded by the package-private constructor below).
         */
        constructor(
            [in] Int32 type);

        constructor(
            [in] Int32 type,
            [in] Int32 subtype,
            [in] String typeName,
            [in] String subtypeName);

        interface INetworkInfo;
        interface IParcelable;
    }

    singleton class CConnectivityManagerHelper {

        interface ILocalConnectivityManagerHelper;
    }

    /**
     * Class that answers queries about the state of network connectivity. It also
     * notifies applications when network connectivity changes. Get an instance
     * of this class by calling
     * {@link android.content.Context#getSystemService(String) Context.getSystemService(Context.CONNECTIVITY_SERVICE)}.
     * <p>
     * The primary responsibilities of this class are to:
     * <ol>
     * <li>Monitor network connections (Wi-Fi, GPRS, UMTS, etc.)</li>
     * <li>Send broadcast intents when network connectivity changes</li>
     * <li>Attempt to "fail over" to another network when connectivity to a network
     * is lost</li>
     * <li>Provide an API that allows applications to query the coarse-grained or fine-grained
     * state of the available networks</li>
     * </ol>
     */
    class CConnectivityManager {

        /**
         * {@hide}
         */
        constructor(
            [in] IConnectivityManager * service);

        interface ILocalConnectivityManager;
    }
}

//    class CWifiMonitor {
//        constructor(
//            [in] IWifiStateTracker* tracker);
//    }
}
