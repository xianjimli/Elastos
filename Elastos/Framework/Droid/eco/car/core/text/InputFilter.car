
module
{
    interface IInputFilter {
        /**
         * This method is called when the buffer is going to replace the
         * range <code>dstart &hellip; dend</code> of <code>dest</code>
         * with the new text from the range <code>start &hellip; end</code>
         * of <code>source</code>.  Return the CharSequence that you would
         * like to have placed there instead, including an empty string
         * if appropriate, or <code>null</code> to accept the original
         * replacement.  Be careful to not to reject 0-length replacements,
         * as this is what happens when you delete text.  Also beware that
         * you should not attempt to make any changes to <code>dest</code>
         * from this method; you may only examine it for context.
         *
         * Note: If <var>source</var> is an instance of {@link Spanned} or
         * {@link Spannable}, the span objects in the <var>source</var> should be
         * copied into the filtered result (i.e. the non-null return value).
         * {@link TextUtils#copySpansFrom} can be used for convenience.
         */
        Filter(
            [in] ICharSequence* source,
            [in] Int32 start,
            [in] Int32 end,
            [in] ISpanned* dest,
            [in] Int32 dstart,
            [in] Int32 dend,
            [out] ICharSequence** cs);
    }
}
