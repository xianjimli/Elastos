
module
{
    interface IInputContextCallbackStub;
    interface IExtractedTextRequest;
    interface ICompletionInfo;
    interface IKeyEvent;
    interface IBundle;

    interface IInputContextStub extends IBinder {
        GetTextBeforeCursor(
            [in] Int32 length,
            [in] Int32 flags,
            [in] Int32 seq,
            [in] IInputContextCallbackStub* icCallback);

        GetTextAfterCursor(
            [in] Int32 length,
            [in] Int32 flags,
            [in] Int32 seq,
            [in] IInputContextCallbackStub* icCallback);

        GetCursorCapsMode(
            [in] Int32 reqModes,
            [in] Int32 seq,
            [in] IInputContextCallbackStub* icCallback);

        GetExtractedText(
            [in] IExtractedTextRequest* request,
            [in] Int32 flags,
            [in] Int32 seq,
            [in] IInputContextCallbackStub* icCallback);

        DeleteSurroundingText(
            [in] Int32 leftLength,
            [in] Int32 rightLength);

        SetComposingText(
            [in] ICharSequence* text,
            [in] Int32 newCursorPosition);

        FinishComposingText();

        CommitText(
            [in] ICharSequence* text,
            [in] Int32 newCursorPosition);

        CommitCompletion(
            [in] ICompletionInfo* completion);

        SetSelection(
            [in] Int32 start,
            [in] Int32 end);

        PerformEditorAction(
            [in] Int32 actionCode);

        PerformContextMenuAction(
            [in] Int32 id);

        BeginBatchEdit();

        EndBatchEdit();

        ReportFullscreenMode(
            [in] Boolean enabled);

        SendKeyEvent(
            [in] IKeyEvent* event);

        ClearMetaKeyStates(
            [in] Int32 states);

        PerformPrivateCommand(
            [in] String action,
            [in] IBundle* data);

        SetComposingRegion(
            [in] Int32 start,
            [in] Int32 end);

        GetSelectedText(
            [in] Int32 flags,
            [in] Int32 seq,
            [in] IInputContextCallbackStub* icCallback);
    }
}
