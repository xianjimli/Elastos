
module
{
    interface IMenu;
    interface IDrawable;
    interface IView;

    /**
     * Additional information regarding the creation of the context menu.  For example,
     * {@link AdapterView}s use this to pass the exact item position within the adapter
     * that initiated the context menu.
     */
    interface IContextMenuInfo {
    }

    /**
     * Extension of {@link Menu} for context menus providing functionality to modify
     * the header of the context menu.
     * <p>
     * Context menus do not support item shortcuts and item icons.
     * <p>
     * To show a context menu on long click, most clients will want to call
     * {@link Activity#registerForContextMenu} and override
     * {@link Activity#onCreateContextMenu}.
     */
    interface IContextMenu extends IMenu {
        /**
         * Sets the context menu header's title to the title given in <var>titleRes</var>
         * resource identifier.
         *
         * @param titleRes The string resource identifier used for the title.
         * @return This ContextMenu so additional setters can be called.
         */
        SetHeaderTitle(
            [in] Int32 titleRes);

        /**
         * Sets the context menu header's title to the title given in <var>title</var>.
         *
         * @param title The character sequence used for the title.
         * @return This ContextMenu so additional setters can be called.
         */
        SetHeaderTitleEx(
            [in] ICharSequence* title);

        /**
         * Sets the context menu header's icon to the icon given in <var>iconRes</var>
         * resource id.
         *
         * @param iconRes The resource identifier used for the icon.
         * @return This ContextMenu so additional setters can be called.
         */
        SetHeaderIcon(
            [in] Int32 iconRes);

        /**
         * Sets the context menu header's icon to the icon given in <var>icon</var>
         * {@link Drawable}.
         *
         * @param icon The {@link Drawable} used for the icon.
         * @return This ContextMenu so additional setters can be called.
         */
        SetHeaderIconEx(
            [in] IDrawable* icon);

        /**
         * Sets the header of the context menu to the {@link View} given in
         * <var>view</var>. This replaces the header title and icon (and those
         * replace this).
         *
         * @param view The {@link View} used for the header.
         * @return This ContextMenu so additional setters can be called.
         */
        SetHeaderView(
            [in] IView* view);

        /**
         * Clears the header of the context menu.
         */
        ClearHeader();
    }
}
