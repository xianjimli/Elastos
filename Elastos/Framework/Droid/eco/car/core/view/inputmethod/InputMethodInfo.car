
/**
 * This class is used to specify meta information of an input method.
 */

module
{
    interface IServiceInfo;
    interface IComponentName;

    interface IInputMethodInfo {
        /**
         * Return a unique ID for this input method.  The ID is generated from
         * the package and class name implementing the method.
         */
        GetId(
            [out] String* id);

        /**
         * Return the .apk package that implements this input method.
         */
        GetPackageName(
            [out] String* name);

        /**
         * Return the class name of the service component that implements
         * this input method.
         */
        GetServiceName(
            [out] String* name);

        /**
         * Return the raw information about the Service implementing this
         * input method.  Do not modify the returned object.
         */
        GetServiceInfo(
            [out] IServiceInfo** info);

        /**
         * Return the component of the service that implements this input
         * method.
         */
        GetComponent(
            [out] IComponentName** name);

        //TODO
        /**
         * Load the user-displayed label for this input method.
         *
         * @param pm Supply a PackageManager used to load the input method's
         * resources.
         */
        //LoadLabel(
        //    [in] IPackageManager* pm,
        //    [out] ICharSequence** str);

        //TODO
        /**
         * Load the user-displayed icon for this input method.
         *
         * @param pm Supply a PackageManager used to load the input method's
         * resources.
         */
        //LoadIcon(
        //    [in] IPackageManager* pm,
        //    [out] IDrawable** drawable);

        /**
         * Return the class name of an activity that provides a settings UI for
         * the input method.  You can launch this activity be starting it with
         * an {@link android.content.Intent} whose action is MAIN and with an
         * explicit {@link android.content.ComponentName}
         * composed of {@link #getPackageName} and the class name returned here.
         *
         * <p>A null will be returned if there is no settings activity associated
         * with the input method.
         */
        GetSettingsActivity(
            [out] String* settings);

        /**
         * Return the resource identifier of a resource inside of this input
         * method's .apk that determines whether it should be considered a
         * default input method for the system.
         */
        GetIsDefaultResourceId(
            [out] Int32* id);

        //public void dump(Printer pw, String prefix);

        DescribeContents(
            [out] Int32* contents);

    }
}
