
module
{
    enum ApartmentAttr {
        ApartmentAttr_Current = 0x01,
        ApartmentAttr_New     = 0x02,
    }

    interface IApartment {
        Start(
            [in] ApartmentAttr attr);

        Finish();

        PostCppCallback(
            [in] Handle32 target,
            [in] Handle32 func,
            [in] IParcel* params,
            [in] Int32 id);

        PostCppCallbackAtTime(
            [in] Handle32 target,
            [in] Handle32 func,
            [in] IParcel* params,
            [in] Int32 id,
            [in] Millisecond64 uptimeMillis);

        PostCppCallbackDelayed(
            [in] Handle32 target,
            [in] Handle32 func,
            [in] IParcel* params,
            [in] Int32 id,
            [in] Millisecond64 delayMillis);

        PostCppCallbackAtFrontOfQueue(
            [in] Handle32 target,
            [in] Handle32 func,
            [in] IParcel* params,
            [in] Int32 id);

        RemoveCppCallbacks(
            [in] Handle32 target,
            [in] Handle32 func);

        RemoveCppCallbacksEx(
            [in] Handle32 target,
            [in] Handle32 func,
            [in] Int32 id);

        HasCppCallbacks(
            [in] Handle32 target,
            [in] Handle32 func,
            [out] Boolean* result);

        HasCppCallbacksEx(
            [in] Handle32 target,
            [in] Handle32 func,
            [in] Int32 id,
            [out] Boolean* result);
    }

    interface IApartmentHelper {
        /** Initialize the current thread as a looper.
          * This gives you a chance to create handlers that then reference
          * this looper, before actually starting the loop. Be sure to call
          * {@link #loop()} after calling this method, and end it by calling
          * {@link #quit()}.
          */
        Prepare();

            /** Initialize the current thread as a looper, marking it as an application's main
         *  looper. The main looper for your application is created by the Android environment,
         *  so you should never need to call this function yourself.
         * {@link #prepare()}
         */

        PrepareMainApartment();

        GetMainApartment(
            [out] IApartment** apartment);

        GetMyApartment(
            [out] IApartment** apartment);

        GetNativeMessageQueue(
            [out] Handle32* messageQueue);
    }
}
