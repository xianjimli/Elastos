
module
{
    interface IGesturePoint;
    interface IOrientedBoundingBox;
    const GestureStroke_TOUCH_TOLERANCE = 3;

    /**
    * A gesture stroke started on a touch down and ended on a touch up. A stroke
    * consists of a sequence of timed points. One or multiple strokes form a gesture.
    */
    interface IGestureStroke
	{
        //public final RectF boundingBox;
        GetBoundingBox(
            [out] IRectF** boundingBox);

        //public final float length;
        GetLength(
            [out] Float* length);

        //public final float[] points;
        GetPoints(
            [out, callee] ArrayOf<Float> * points);

        /*@Override*/
        Clone(
            [out] IGestureStroke** obj);

        /**
        * Draws the stroke with a given canvas and paint.
        * 
        * @param canvas
        */
        Draw(
            [in] ICanvas* canvas,
            [in] IPaint* paint);

        GetPath(
            [out] IPath** path);

        /**
        * Converts the stroke to a Path of a given number of points.
        * 
        * @param width the width of the bounding box of the target path
        * @param height the height of the bounding box of the target path
        * @param numSample the number of points needed
        * 
        * @return the path
        */
        ToPath(
            [in] Float width,
            [in] Float height,
            [in] Int32 numSample,
            [out] IPath** path);

        Serialize(
            [in] IDataOutputStream* outStream); 
/*static
        Deserialize(
            [in] IDataInputStream* inStream,
            [out] IGestureStroke** gestureStroke);
*/
        /**
        * Invalidates the cached path that is used to render the stroke.
        */
        ClearPath();

        /**
        * Computes an oriented bounding box of the stroke.
        * 
        * @return OrientedBoundingBox
        */
        ComputeOrientedBoundingBox(
            [out] IOrientedBoundingBox** orientedBoundingBox);

    }       
}
