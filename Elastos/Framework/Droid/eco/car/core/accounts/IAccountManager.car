
/**
 * Central application service that provides account management.
 * @hide
 */
module
{
    interface IAccount;
    interface IAccountManagerResponse;

    interface IAccountManager {
        GetPassword(
            [in] IAccount* account,
            [out] String* password);

        GetUserData(
            [in] IAccount* account,
            [in] String key,
            [out] String* userData);

        GetAuthenticatorTypes(
            [out] IObjectContainer** types);

        GetAccounts(
            [in] String accountType,
            [out] IObjectContainer** accounts);

        HasFeatures(
            [in] IAccountManagerResponse* response,
            [in] IAccount* account,
            [in] ArrayOf<String> features);

        GetAccountsByFeatures(
            [in] IAccountManagerResponse* response,
            [in] String accountType,
            [in] ArrayOf<String> features);

        AddAccount(
            [in] IAccount* account,
            [in] String password,
            [in] IBundle* extras,
            [out] Boolean* result);

        RemoveAccount(
            [in] IAccountManagerResponse* response,
            [in] IAccount* account);

        InvalidateAuthToken(
            [in] String accountType,
            [in]
            String authToken);

        PeekAuthToken(
            [in] IAccount* account,
            [in] String authTokenType,
            [out] String* token);

        SetAuthToken(
            [in] IAccount* account,
            [in] String authTokenType,
            [in] String authToken);

        SetPassword(
            [in] IAccount* account,
            [in] String password);

        ClearPassword(
            [in] IAccount* account);

        SetUserData(
            [in] IAccount* account,
            [in] String key,
            [in] String value);

        GetAuthToken(
            [in] IAccountManagerResponse* response,
            [in] IAccount* account,
            [in] String authTokenType,
            [in] Boolean notifyOnAuthFailure,
            [in] Boolean expectActivityLaunch,
            [in] IBundle* options);

        AddAcount(
            [in] IAccountManagerResponse* response,
            [in] String accountType,
            [in] String authTokenType,
            [in] ArrayOf<String> requiredFeatures,
            [in] Boolean expectActivityLaunch,
            [in] IBundle* options);

        UpdateCredentials(
            [in] IAccountManagerResponse* response,
            [in] IAccount* account,
            [in] String authTokenType,
            [in] Boolean expectActivityLaunch,
            [in] IBundle* options);

        EditProperties(
            [in] IAccountManagerResponse* response,
            [in] String accountType,
            [in] Boolean expectActivityLaunch);

        ConfirmCredentials(
            [in] IAccountManagerResponse* response,
            [in] IAccount* account,
            [in] IBundle* options,
            [in] Boolean expectActivityLaunch);
    }
}
