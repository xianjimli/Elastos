
module
{
    interface IParceledListSlice {
        /**
         * Appends a parcel to this list slice.
         *
         * @param item Parcelable item to append to this list slice
         * @return true when the list slice is full and should not be appended to
         *         anymore
         */
        Append(
            [in] IParcelable* item,
            [out] Boolean* isFull);

        /**
         * Populates a list and discards the internal state of the
         * ParceledListSlice in the process. The instance should
         * not be used anymore.
         *
         * @param list list to insert items from this slice.
         * @param creator creator that knows how to unparcel the
         *        target object type.
         * @return the last item inserted into the list or null if none.
         */
//	        public T populateList(List<T> list, Creator<T> creator);

        /**
         * Sets whether this is the last list slice in the series.
         *
         * @param lastSlice
         */
        SetLastSlice(
            [in] Boolean lastSlice);

        /**
         * Returns whether this is the last slice in a series of slices.
         *
         * @return true if this is the last slice in the series.
         */
        IsLastSlice(
            [out] Boolean* isLast);
    }
}

