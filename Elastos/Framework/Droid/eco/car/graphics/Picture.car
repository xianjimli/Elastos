
module
{
    interface ICanvas;
    interface IOutputStream;

    interface IPicture {
        /**
         * To record a picture, call beginRecording() and then draw into the Canvas
         * that is returned. Nothing we appear on screen, but all of the draw
         * commands (e.g. drawRect(...)) will be recorded. To stop recording, call
         * endRecording(). At this point the Canvas that was returned must no longer
         * be referenced, and nothing should be drawn into it.
         */
        BeginRecording(
            [in] Int32 width,
            [in] Int32 height,
            [out] ICanvas** canvas);

        /**
         * Call endRecording when the picture is built. After this call, the picture
         * may be drawn, but the canvas that was returned by beginRecording must not
         * be referenced anymore. This is automatically called if Picture.draw() or
         * Canvas.drawPicture() is called.
         */
        EndRecording();

        /**
         * Get the width of the picture as passed to beginRecording. This
         * does not reflect (per se) the content of the picture.
         */
        GetWidth(
            [out] Int32* width);

        /**
         * Get the height of the picture as passed to beginRecording. This
         * does not reflect (per se) the content of the picture.
         */
        GetHeight(
            [out] Int32* height);

        /**
         * Draw this picture on the canvas. The picture may have the side effect
         * of changing the matrix and clip of the canvas.
         *
         * @param canvas  The picture is drawn to this canvas
         */
        Draw(
            [in] ICanvas* canvas);

        /**
         * Write the picture contents to a stream. The data can be used to recreate
         * the picture in this or another process by calling createFromStream.
         */
        WriteToStream(
            [in] IOutputStream* stream);
    }
}
