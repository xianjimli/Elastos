module
{
    /**
     * Interface that should be implemented on Adapters to enable fast scrolling
     * in an {@link AbsListView} between sections of the list. A section is a group of list items
     * to jump to that have something in common. For example, they may begin with the
     * same letter or they may be songs from the same artist.
     */
    interface ISectionIndexer {
        /**
         * This provides the list view with an array of section objects. In the simplest
         * case these are Strings, each containing one letter of the alphabet.
         * They could be more complex objects that indicate the grouping for the adapter's
         * consumption. The list view will call toString() on the objects to get the
         * preview letter to display while scrolling.
         * @return the array of objects that indicate the different sections of the list.
         */
        GetSections(
            [out] IObjectContainer** sections);

        /**
         * Provides the starting index in the list for a given section.
         * @param section the index of the section to jump to.
         * @return the starting position of that section. If the section is out of bounds, the
         * position must be clipped to fall within the size of the list.
         */
        GetPositionForSection(
            [in] Int32 section,
            [out] Int32* position);

        /**
         * This is a reverse mapping to fetch the section index for a given position
         * in the list.
         * @param position the position for which to return the section
         * @return the section index. If the position is out of bounds, the section index
         * must be clipped to fall within the size of the section array.
         */
        GetSectionForPosition(
            [in] Int32 position,
            [out] Int32* section);
    }

}
